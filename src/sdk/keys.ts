/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysCreate } from "../funcs/keysCreate.js";
import { keysGet } from "../funcs/keysGet.js";
import { keysList } from "../funcs/keysList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { ApiKey } from "../models/components/apikey.js";
import { CreateApiKeyRequestBody } from "../models/operations/createapikey.js";
import { GetApiKeyRequest } from "../models/operations/getapikey.js";
import { unwrapAsync } from "../types/fp.js";

export class Keys extends ClientSDK {
  /**
   * Create a new API key for a  company
   *
   * @remarks
   * Create a new API key for a company.
   */
  async create(
    request: CreateApiKeyRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(keysCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List all active API keys for a client
   *
   * @remarks
   * List all active API keys for a client.
   */
  async list(
    options?: RequestOptions,
  ): Promise<ApiKey> {
    return unwrapAsync(keysList(
      this,
      options,
    ));
  }

  /**
   * Retrieve a single API key
   *
   * @remarks
   * Retrieve a single API key.
   */
  async get(
    request: GetApiKeyRequest,
    options?: RequestOptions,
  ): Promise<ApiKey> {
    return unwrapAsync(keysGet(
      this,
      request,
      options,
    ));
  }
}
