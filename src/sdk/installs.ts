/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appsInstallsGet } from "../funcs/appsInstallsGet.js";
import { appsInstallsHardDelete } from "../funcs/appsInstallsHardDelete.js";
import { appsInstallsList } from "../funcs/appsInstallsList.js";
import { appsInstallsUninstall } from "../funcs/appsInstallsUninstall.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { AppInstall } from "../models/components/appinstall.js";
import { DeleteAppInstallRequest } from "../models/operations/deleteappinstall.js";
import { GetAppInstallRequest } from "../models/operations/getappinstall.js";
import {
  ListAppInstallsRequest,
  ListAppInstallsResponse,
} from "../models/operations/listappinstalls.js";
import { UninstallAppRequest } from "../models/operations/uninstallapp.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Installs extends ClientSDK {
  /**
   * List all installs of a specific app
   */
  async list(
    request: ListAppInstallsRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<ListAppInstallsResponse>> {
    return unwrapResultIterator(appsInstallsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Soft uninstall an app (mark it as uninstalled but retain data)
   */
  async uninstall(
    request: UninstallAppRequest,
    options?: RequestOptions,
  ): Promise<AppInstall> {
    return unwrapAsync(appsInstallsUninstall(
      this,
      request,
      options,
    ));
  }

  /**
   * Hard delete an app (remove all data)
   */
  async hardDelete(
    request: DeleteAppInstallRequest,
    options?: RequestOptions,
  ): Promise<AppInstall> {
    return unwrapAsync(appsInstallsHardDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get details of a specific app install
   */
  async get(
    request: GetAppInstallRequest,
    options?: RequestOptions,
  ): Promise<AppInstall> {
    return unwrapAsync(appsInstallsGet(
      this,
      request,
      options,
    ));
  }
}
