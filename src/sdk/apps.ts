/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appsGet } from "../funcs/appsGet.js";
import { appsInstall } from "../funcs/appsInstall.js";
import { appsList } from "../funcs/appsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { App } from "../models/components/app.js";
import { GetAppRequest } from "../models/operations/getapp.js";
import { InstallAppRequest } from "../models/operations/installapp.js";
import { unwrapAsync } from "../types/fp.js";
import { Installs } from "./installs.js";

export class Apps extends ClientSDK {
  private _installs?: Installs;
  get installs(): Installs {
    return (this._installs ??= new Installs(this._options));
  }

  /**
   * List all available apps
   */
  async list(
    options?: RequestOptions,
  ): Promise<Array<App>> {
    return unwrapAsync(appsList(
      this,
      options,
    ));
  }

  /**
   * Get details of a specific app
   */
  async get(
    request: GetAppRequest,
    options?: RequestOptions,
  ): Promise<App> {
    return unwrapAsync(appsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Install an app for a company
   */
  async install(
    request: InstallAppRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(appsInstall(
      this,
      request,
      options,
    ));
  }
}
