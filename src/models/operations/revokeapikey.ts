/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RevokeApiKeyRequest = {
  keyId: string;
};

/** @internal */
export const RevokeApiKeyRequest$inboundSchema: z.ZodType<
  RevokeApiKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  key_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "key_id": "keyId",
  });
});

/** @internal */
export type RevokeApiKeyRequest$Outbound = {
  key_id: string;
};

/** @internal */
export const RevokeApiKeyRequest$outboundSchema: z.ZodType<
  RevokeApiKeyRequest$Outbound,
  z.ZodTypeDef,
  RevokeApiKeyRequest
> = z.object({
  keyId: z.string(),
}).transform((v) => {
  return remap$(v, {
    keyId: "key_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevokeApiKeyRequest$ {
  /** @deprecated use `RevokeApiKeyRequest$inboundSchema` instead. */
  export const inboundSchema = RevokeApiKeyRequest$inboundSchema;
  /** @deprecated use `RevokeApiKeyRequest$outboundSchema` instead. */
  export const outboundSchema = RevokeApiKeyRequest$outboundSchema;
  /** @deprecated use `RevokeApiKeyRequest$Outbound` instead. */
  export type Outbound = RevokeApiKeyRequest$Outbound;
}

export function revokeApiKeyRequestToJSON(
  revokeApiKeyRequest: RevokeApiKeyRequest,
): string {
  return JSON.stringify(
    RevokeApiKeyRequest$outboundSchema.parse(revokeApiKeyRequest),
  );
}

export function revokeApiKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<RevokeApiKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevokeApiKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevokeApiKeyRequest' from JSON`,
  );
}
