/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListWebhooksGlobals = {
  companyId?: string | undefined;
};

export type ListWebhooksRequest = {};

/** @internal */
export const ListWebhooksGlobals$inboundSchema: z.ZodType<
  ListWebhooksGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string().optional(),
});

/** @internal */
export type ListWebhooksGlobals$Outbound = {
  companyId?: string | undefined;
};

/** @internal */
export const ListWebhooksGlobals$outboundSchema: z.ZodType<
  ListWebhooksGlobals$Outbound,
  z.ZodTypeDef,
  ListWebhooksGlobals
> = z.object({
  companyId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListWebhooksGlobals$ {
  /** @deprecated use `ListWebhooksGlobals$inboundSchema` instead. */
  export const inboundSchema = ListWebhooksGlobals$inboundSchema;
  /** @deprecated use `ListWebhooksGlobals$outboundSchema` instead. */
  export const outboundSchema = ListWebhooksGlobals$outboundSchema;
  /** @deprecated use `ListWebhooksGlobals$Outbound` instead. */
  export type Outbound = ListWebhooksGlobals$Outbound;
}

export function listWebhooksGlobalsToJSON(
  listWebhooksGlobals: ListWebhooksGlobals,
): string {
  return JSON.stringify(
    ListWebhooksGlobals$outboundSchema.parse(listWebhooksGlobals),
  );
}

export function listWebhooksGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<ListWebhooksGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListWebhooksGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListWebhooksGlobals' from JSON`,
  );
}

/** @internal */
export const ListWebhooksRequest$inboundSchema: z.ZodType<
  ListWebhooksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListWebhooksRequest$Outbound = {};

/** @internal */
export const ListWebhooksRequest$outboundSchema: z.ZodType<
  ListWebhooksRequest$Outbound,
  z.ZodTypeDef,
  ListWebhooksRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListWebhooksRequest$ {
  /** @deprecated use `ListWebhooksRequest$inboundSchema` instead. */
  export const inboundSchema = ListWebhooksRequest$inboundSchema;
  /** @deprecated use `ListWebhooksRequest$outboundSchema` instead. */
  export const outboundSchema = ListWebhooksRequest$outboundSchema;
  /** @deprecated use `ListWebhooksRequest$Outbound` instead. */
  export type Outbound = ListWebhooksRequest$Outbound;
}

export function listWebhooksRequestToJSON(
  listWebhooksRequest: ListWebhooksRequest,
): string {
  return JSON.stringify(
    ListWebhooksRequest$outboundSchema.parse(listWebhooksRequest),
  );
}

export function listWebhooksRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListWebhooksRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListWebhooksRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListWebhooksRequest' from JSON`,
  );
}
